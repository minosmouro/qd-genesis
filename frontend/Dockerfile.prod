# syntax=docker/dockerfile:1.6
FROM node:20-alpine AS build

WORKDIR /app
ENV HUSKY=0

COPY package*.json ./
RUN npm ci

COPY . .

ENV NODE_ENV=production

# Permite sobrepor a URL da API em build
ARG VITE_API_URL
ENV VITE_API_URL=${VITE_API_URL}

RUN npm run build

FROM nginx:1.27-alpine AS runtime

RUN apk add --no-cache curl && \
    adduser -D -H -u 1001 frontend && \
  rm -rf /usr/share/nginx/html/*

RUN mkdir -p \
  /var/cache/nginx/client_temp \
  /var/cache/nginx/proxy_temp \
  /var/cache/nginx/fastcgi_temp \
  /var/cache/nginx/uwsgi_temp \
  /var/cache/nginx/scgi_temp \
  /var/run/nginx \
  /var/log/nginx && \
  chown -R frontend:frontend /var/cache/nginx /var/run/nginx /var/log/nginx && \
  chmod -R 775 /var/cache/nginx /var/run/nginx /var/log/nginx

COPY --from=build /app/dist /usr/share/nginx/html
COPY nginx.conf /etc/nginx/conf.d/default.conf

RUN chown -R frontend:frontend /usr/share/nginx/html

USER frontend

EXPOSE 80

HEALTHCHECK --interval=30s --timeout=5s --start-period=5s --retries=3 \
  CMD curl -fsS http://127.0.0.1/health || exit 1

CMD ["nginx", "-g", "daemon off;"]
