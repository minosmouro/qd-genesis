#!/usr/bin/env python3
"""
Configura√ß√£o simplificada para Celery Beat - Renova√ß√£o autom√°tica CanalpPro.
Sistema permanente de renova√ß√£o a cada 2 horas.
"""

from celery.schedules import crontab
from celery.utils.log import get_task_logger

logger = get_task_logger(__name__)

class SimpleCanalpProScheduleConfig:
    """
    Configura√ß√£o simplificada para agendamento autom√°tico de renova√ß√£o CanalpPro
    """
    
    @staticmethod
    def get_beat_schedule():
        """
        Retorna o schedule para Celery Beat
        
        Returns:
            Dict com configura√ß√£o de schedule
        """
        schedule = {
            # Verifica√ß√£o autom√°tica a cada 2 horas usando implementa√ß√£o HAR
            'canalpro-auto-renewal': {
                'task': 'canalpro-auto-renewal',
                'schedule': crontab(minute=0, hour='*/2'),  # A cada 2 horas
                'options': {
                    'expires': 3600,  # Task expira em 1 hora se n√£o executar
                    'retry': True,
                    'retry_policy': {
                        'max_retries': 3,
                        'interval_start': 0,
                        'interval_step': 10,
                        'interval_max': 60,
                    }
                }
            },
            
            # Health check di√°rio
            'canalpro-health-check': {
                'task': 'canalpro-health-check',
                'schedule': crontab(minute=0, hour=8),  # Diariamente √†s 8h
                'options': {
                    'expires': 1800,  # Expira em 30 minutos
                    'retry': False,
                }
            }
        }
        
        logger.info("Configura√ß√£o de schedule CanalpPro carregada com %d tasks", len(schedule))
        return schedule
    
    @staticmethod 
    def enable_permanent_renewal():
        """
        Ativa renova√ß√£o permanente conforme solicitado pelo usu√°rio
        """
        logger.info("‚úÖ Sistema de renova√ß√£o autom√°tica PERMANENTE ativo!")
        logger.info("üîÑ Verifica√ß√£o a cada 2 horas")
        logger.info("‚ö° Renova√ß√£o quando token < 24h para expirar")
        logger.info("üõ°Ô∏è Sistema robusto baseado no script manual que funciona")
        
        return True

# Configura√ß√£o para ser importada pelo celery_app.py
CANALPRO_BEAT_SCHEDULE = SimpleCanalpProScheduleConfig.get_beat_schedule()

# Ativar sistema permanente
SimpleCanalpProScheduleConfig.enable_permanent_renewal()
